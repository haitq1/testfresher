{"version":3,"sources":["containers/Step1.jsx","actions/index.js","constants/index.js","data/dishes.js","containers/Step2.jsx","containers/Step3.jsx","containers/Review.jsx","App.js","serviceWorker.js","reducers/orderFood.js","reducers/index.js","index.js"],"names":["Meals","Step1","handleChangeMeal","event","props","selectMeal","target","value","setState","meal","handleChangePeople","selectPeople","people","FormControl","fullWidth","className","style","width","marginLeft","InputLabel","Select","defaultValue","this","onChange","map","item","MenuItem","key","options","i","push","Component","connect","state","orderFood","dispatch","type","SelectMeal","SelectPeople","data","Step2","handleChangeRestaurant","selectRestaurant","restaurant","result","getListRestaurantByMeal","indexOf","dishes","availableMeals","getListRestaurant","SelectRestaurant","Step3","foods","listFoods","handleChangeFood","selectedFood","handleChangeCountFood","selectedFoodCount","addFood","selectFood","food","name","count","filter","alert","onDelete","deleteFood","index","findFood","splice","getListFood","forEach","renderFoods","console","log","length","TableRow","TableCell","IconButton","onClick","Icon","color","getListFoodByRestaurant","nextProps","Button","variant","marginTop","Table","whiteSpace","TableHead","TableBody","SelectFood","DeleteFood","Review","alignItems","steps","App","handleBack","activeStep","handleNext","checkData","handleReset","resetValue","class","Stepper","alternativeLabel","step","Step","StepLabel","checkStep","disabled","isDisable","float","marginRight","Boolean","window","location","hostname","match","initialState","action","appReducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.547948ac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { SelectMeal, SelectPeople } from \"../actions/index\";\nconst Meals = [\"breakfast\", \"lunch\", \"dinner\"];\nclass Step1 extends Component {\n  handleChangeMeal = (event) => {\n    this.props.selectMeal(event.target.value);\n    this.setState({\n      meal: event.target.value,\n    });\n  };\n  handleChangePeople = (event) => {\n    this.props.selectPeople(event.target.value);\n    this.setState({\n      people: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <FormControl\n          fullWidth={true}\n          className=\"mt-16\"\n          style={{ width: \"300px\", marginLeft: \"50px\" }}\n        >\n          <InputLabel>{<span>Please select a meal</span>}</InputLabel>\n          <Select\n            defaultValue={this.props.meal ? this.props.meal : \"\"}\n            onChange={(event) => this.handleChangeMeal(event)}\n          >\n            {Meals.map((item) => {\n              return (\n                <MenuItem key={item} value={item}>\n                  {item}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <FormControl\n          fullWidth={true}\n          className=\"mt-16\"\n          style={{ width: \"300px\", marginLeft: \"150px\" }}\n        >\n          <InputLabel>{<span>Please enter number of people</span>}</InputLabel>\n          <Select\n            defaultValue={this.props.people ? this.props.people : \"\"}\n            onChange={(event) => this.handleChangePeople(event)}\n          >\n            {(() => {\n              const options = [];\n\n              for (let i = 1; i <= 10; i++) {\n                options.push(\n                  <MenuItem key={i} value={i}>\n                    {i}\n                  </MenuItem>\n                );\n              }\n\n              return options;\n            })()}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    people: state.orderFood.people,\n    meal: state.orderFood.meal,\n  };\n};\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    selectMeal: (meal) => {\n      dispatch(SelectMeal(meal));\n    },\n    selectPeople: (people) => {\n      dispatch(SelectPeople(people));\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Step1);\n","import * as Types from '../constants/index';\n\nexport const SelectMeal = (meal) => {\n    return {\n        type: Types.SELECT_MEAL,\n        meal\n    }\n}\nexport const SelectPeople = (people) => {\n    return {\n        type: Types.SELECT_PEOPLE,\n        people\n    }\n}\nexport const SelectRestaurant = (restaurant) => {\n    return {\n        type: Types.SELECT_RESTAURANT,\n        restaurant\n    }\n}\nexport const SelectFood = (name, count) => {\n    var food = {};\n    food.name = name;\n    food.count = count;\n    return {\n        type: Types.SELECT_FOOD,\n        food\n    }\n}\n\nexport const ResetValue = () => {\n    return {\n        type: Types.RESET_VALUE\n    }\n}\n\nexport const DeleteFood = (food) => {\n    return {\n        type: Types.DELETE_FOOD,\n        food\n    }\n}\n","export const SELECT_MEAL = 'SELECT_MEAL';\nexport const SELECT_PEOPLE = 'SELECT_PEOPLE';\nexport const SELECT_RESTAURANT = 'SELECT_RESTAURANT';\nexport const SELECT_FOOD='SELECT_FOOD';\nexport const RESET_VALUE = 'RESET_VALUE';\nexport const DELETE_FOOD = 'DELETE_FOOD';","export const data = {\n  \"dishes\": [\n    {\n      \"id\": 1,\n      \"name\": \"Chicken Burger\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Ham Burger\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Cheese Burger\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Fries\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 5,\n      \"name\": \"Egg Muffin\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"breakfast\"]\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Burrito\",\n      \"restaurant\": \"Taco Bell\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 7,\n      \"name\": \"Tacos\",\n      \"restaurant\": \"Taco Bell\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Quesadilla\",\n      \"restaurant\": \"Taco Bell\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 9,\n      \"name\": \"Steak\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 10,\n      \"name\": \"Yakitori\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 11,\n      \"name\": \"Nankotsu\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Piman\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 13,\n      \"name\": \"Vegan Bento\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\"]\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Coleslaw Sandwich\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"breakfast\"]\n    },\n    {\n      \"id\": 15,\n      \"name\": \"Grilled Sandwich\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"breakfast\"]\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Veg. Salad\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 17,\n      \"name\": \"Fruit Salad\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Corn Soup\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 19,\n      \"name\": \"Tomato Soup\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 20,\n      \"name\": \"Minestrone Soup\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 21,\n      \"name\": \"Pepperoni Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 22,\n      \"name\": \"Pepperoni Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 23,\n      \"name\": \"Hawaiian Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 24,\n      \"name\": \"Seafood Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 25,\n      \"name\": \"Deep Dish Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 26,\n      \"name\": \"Chow Mein\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Mapo Tofu\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 28,\n      \"name\": \"Kung Pao\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 29,\n      \"name\": \"Wontons\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 30,\n      \"name\": \"Garlic Bread\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"breakfast\", \"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 31,\n      \"name\": \"Ravioli\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 32,\n      \"name\": \"Rigatoni Spaghetti\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 33,\n      \"name\": \"Fettucine Pasta\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    }\n  ]\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {data} from '../data/dishes'\nimport {FormControl,InputLabel,Select,MenuItem} from '@material-ui/core';\nimport {SelectRestaurant} from '../actions/index'\nclass Step2 extends Component {\n    getListRestaurant(){\n        var result =[]\n        this.getListRestaurantByMeal().map(value =>{\n            var index = result.indexOf(value.restaurant)\n            if(index === -1){\n                result.push(value.restaurant);\n            }  \n        })\n        return result\n    }\n    getListRestaurantByMeal(){\n        var result = [];\n        data.dishes.map(value =>{\n            var index = value.availableMeals.indexOf(this.props.meal);\n            if(index !== -1){\n                result.push(value)\n            }\n        })\n        return result;\n    }\n    handleChangeRestaurant = (event) =>{\n        this.props.selectRestaurant(event.target.value);\n        this.setState({\n            restaurant : event.target.value\n        })\n    }\n    render(){\n        return(\n            <FormControl fullWidth={true}  className=\"mt-16\" style = {{width:\"300px\", marginLeft:\"150px\"}}>\n                <InputLabel >{<span>Please select a restaurant</span>}</InputLabel>\n                <Select\n                    // value={this.state? this.state.restaurant : ''}\n                    defaultValue={this.props.restaurant ? this.props.restaurant : ''}\n                    onChange={(event) => this.handleChangeRestaurant(event)}\n                >\n                    {this.getListRestaurant().map((item) => {\n                        return (\n                            <MenuItem key={item} value={item}>\n                                {item}\n                            </MenuItem>\n                        )\n                    })}\n                </Select>\n            </FormControl> \n        );\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        people: state.orderFood.people,\n        meal: state.orderFood.meal, \n        restaurant: state.orderFood.restaurant,\n    }\n};\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        selectRestaurant: (restaurant) => {\n            dispatch(SelectRestaurant(restaurant))\n        },\n\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Step2);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {data} from '../data/dishes'\nimport {FormControl,InputLabel,Select,MenuItem,Table,TableHead,TableRow,TableCell,TableBody,Button,IconButton,Icon,} from '@material-ui/core';\nimport {SelectFood,DeleteFood} from '../actions/index'\nclass Step3 extends Component {\n    state={\n        foods : [],\n        listFoods:[]\n    }\n    getListFoodByRestaurant(){\n        var result =[];\n        data.dishes.map(value =>{\n            if(value.restaurant === this.props.restaurant){\n                result.push(value)\n            }\n        })\n\n        return result\n    }\n    getListFood(){\n        var result = [];\n        this.getListFoodByRestaurant().map(value =>{\n            var index = value.availableMeals.indexOf(this.props.meal);\n            if(index !== -1){\n                result.push(value.name)\n            }\n        })\n        return result;\n    }\n    componentWillMount(){\n        var listFoods = this.getListFood();\n        if(this.props.foods){\n            this.props.foods.map(food =>{\n                listFoods = listFoods.filter(item => item !== food.name);\n            })\n            this.setState({\n                foods:this.props.foods,\n                listFoods:listFoods\n            })\n        }\n        else{\n            this.setState({\n                listFoods:listFoods\n            })\n        }\n    }\n    handleChangeFood = (event) =>{\n        this.setState({\n            selectedFood : event.target.value,\n\n        })\n    }\n\n    handleChangeCountFood = (event) =>{\n        this.setState({\n            selectedFoodCount : event.target.value,\n\n        })\n    }\n    addFood = () =>{\n        var {selectedFood,selectedFoodCount} = this.state;\n        var foods = this.state.foods;\n        if(selectedFoodCount && selectedFood){\n            this.props.selectFood(selectedFood,selectedFoodCount);\n            if(foods == null){\n                foods = []\n            }\n            var food = {};\n            food.name = selectedFood;\n            food.count = selectedFoodCount;\n            foods.push(food)\n            var listFoods = this.state.listFoods.filter(item => item !== this.state.selectedFood);\n            this.setState({\n                foods:foods,\n                listFoods:listFoods,\n                selectedFood : null\n            })\n        }\n        else{\n            alert('You have not entered the information')\n        }\n        \n    }\n    onDelete = (food) =>{\n        this.props.deleteFood(food)\n        var foods = this.state.foods;\n        var index = this.findFood(foods,food.name)\n        foods.splice(index,1);\n        var listFoods = this.getListFood();\n        this.props.foods.map(food =>{\n            listFoods = listFoods.filter(item => item !== food.name);\n        })\n        this.setState({\n            foods:foods,\n            listFoods:listFoods,\n        })\n    }\n    findFood = (foods, name) => {\n        var result = -1;\n        foods.forEach((food, index) => {\n            if (food.name === name) {\n                result = index;\n            }\n        });\n        return result;\n    }\n    renderFoods = (foods) =>{\n        var result = null;\n        console.log(foods)\n        if(foods.length > 0){\n            result = foods.map((food,key)=>{\n                return(\n                    <TableRow key={key}>\n                        <TableCell>{food.name}</TableCell>\n                        <TableCell>{food.count}</TableCell>\n                        <TableCell>\n                            <IconButton onClick={() => this.onDelete(food)}>\n                                <Icon color=\"error\">x</Icon>\n                            </IconButton>\n                        </TableCell>\n                    </TableRow>\n                );\n            })\n        }\n        return result;\n    }\n    componentWillReceiveProps(nextProps){\n        console.log(nextProps.foods)\n    }\n    render(){\n        // console.log(this.state.foods ? this.state.foods : '')\n        var foods = this.state.foods ? this.state.foods : []\n        return(\n            <div>\n                <FormControl fullWidth={true}  className=\"mt-16\" style = {{width:\"300px\", marginLeft:\"150px\"}}>\n                    <InputLabel >{<span>Please select a restaurant</span>}</InputLabel>\n                    <Select\n                        // value={this.state? this.state.restaurant : ''}\n                        // defaultValue={this.props.restaurant ? this.props.restaurant : ''}\n                        onChange={(event) => this.handleChangeFood(event)}\n                    >\n                        {this.state.listFoods.map((item) => {\n                            return (\n                                <MenuItem key={item} value={item}>\n                                    {item}\n                                </MenuItem>\n                            )\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth={true}  className=\"mt-16\" style = {{width:\"300px\", marginLeft:\"150px\"}}>\n                    <InputLabel >{<span>Please enter number of people</span>}</InputLabel>\n                    <Select\n                        // value={this.state? this.state.people : ''}\n                        // defaultValue={this.props.people ? this.props.people : ''}\n                        onChange={(event) => this.handleChangeCountFood(event)}\n                    >\n                        {/* {Meals.map((item) => {\n                            return (\n                                <MenuItem key={item} value={item}>\n                                    {item}\n                                </MenuItem>\n                            )\n                        })} */}\n                        {(() => {\n                            const options = [];\n\n                            for (let i = 1; i <= 10; i++) {\n                                options.push(\n                                    <MenuItem key={i} value={i}>\n                                        {i}\n                                    </MenuItem>\n                                );\n                            }\n\n                            return options;\n                        })()}\n                    </Select>\n                </FormControl>  \n                <Button variant=\"contained\" onClick={this.addFood} color=\"primary\" style={{marginTop:\"10px\", marginLeft:\"50px\"}}>ORDER</Button>\n                <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", width:\"300px\", marginLeft:\"40%\", marginTop:\"30px\"}}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Food</TableCell>\n                            <TableCell>Amount</TableCell>\n                            <TableCell></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.renderFoods(foods)}\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        people: state.orderFood.people,\n        meal: state.orderFood.meal, \n        restaurant: state.orderFood.restaurant,\n        foods: state.orderFood.foods\n    }\n};\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        selectFood: (food,count) => {\n            dispatch(SelectFood(food,count))\n        },\n        deleteFood: (food) => {\n            dispatch(DeleteFood(food))\n        },\n        \n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Step3);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Table,TableHead,TableRow,TableCell,TableBody,Button} from '@material-ui/core';\nclass Review extends Component {\n    renderFoods = (foods) =>{\n        var result = null;\n        if(foods.length > 0){\n            result = foods.map((food,key)=>{\n                return(\n                    <TableRow key={key}>\n                        <TableCell>{food.name}</TableCell>\n                        <TableCell>{food.count}</TableCell>\n                    </TableRow>\n                );\n            })\n        }\n        return result;\n    }\n    render(){\n        return(\n            <div>\n                <h3>Information</h3>\n                <p><b>Meal:</b> {this.props.meal} </p>\n                <p><b>People:</b> {this.props.people}</p>\n                <p><b>Restaurant:</b> {this.props.restaurant}</p>\n                <p> <b>Dishes:</b></p>\n                <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", width:\"300px\", marginLeft:\"100px\", alignItems:'center'}}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Food</TableCell>\n                            <TableCell>Amount</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.renderFoods(this.props.foods)}\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        people: state.orderFood.people,\n        meal: state.orderFood.meal, \n        restaurant: state.orderFood.restaurant,\n        foods: state.orderFood.foods\n    }\n};\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n\n\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Review);","import React, { Component } from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Step1 from './containers/Step1';\nimport Step2 from './containers/Step2';\nimport Step3 from './containers/Step3';\nimport Review from './containers/Review';\nimport { connect } from 'react-redux';\nimport { ResetValue } from './actions/index';\nimport './App.css'\nconst steps = ['Step 1', 'Step 2', 'Step 3', 'Review']\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeStep: 0\n    };\n\n  }\n  handleBack = () => {\n    var activeStep = this.state.activeStep - 1\n    this.setState({\n      activeStep: activeStep\n    })\n  }\n  handleNext = () => {\n    if (this.checkData() === 1) {\n      var activeStep = this.state.activeStep + 1\n      this.setState({\n        activeStep: activeStep\n      })\n    }\n    else if (this.checkData() === 0) {\n      alert('You have not entered the information');\n    }\n    else if (this.checkData() === 2) {\n      alert('You have not entered the information');\n    }\n\n  }\n  handleReset = () => {\n    this.props.resetValue();\n    this.setState({\n      activeStep: 0\n    })\n  }\n  checkData = () => {\n    var { activeStep } = this.state;\n    var { people, meal, restaurant, foods } = this.props\n    var result = 1;\n    if (activeStep === 0) {\n      if (!people || !meal) {\n        result = 0;\n      }\n      else {\n        result = 1;\n      }\n    }\n    else if (activeStep === 1) {\n      if (!restaurant) {\n        result = 0;\n      }\n      else {\n        result = 1;\n      }\n    }\n    else if (activeStep === 2) {\n      if (!foods) {\n        result = 0;\n      }\n      else {\n        var value = null\n        foods.map(food => {\n          value = value + food.count\n        })\n        if (value < people) {\n          result = 2\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    return result;\n  }\n  checkStep() {\n    var { activeStep } = this.state;\n    switch (activeStep) {\n      case 0:\n        return (<Step1 />);\n      case 1:\n        return (<Step2 />);\n      case 2:\n        return (<Step3 />);\n      case 3:\n        return (<Review />);\n    }\n  }\n\n  render() {\n    var { activeStep } = this.state\n    return (\n      <div className=\"App\">\n        <header>\n          <h1 class=\"h1\">MY ORDER</h1>\n        </header>\n        <Stepper activeStep={activeStep} alternativeLabel>\n          {steps.map((step) => (\n            <Step key={step}>\n              <StepLabel>{step}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        {this.checkStep()}\n        <div style={{ marginTop: \"30px\" }}>\n          {activeStep === steps.length ? (\n            <div>\n              <Button variant=\"contained\" onClick={this.handleReset} color=\"default\" style={{ marginLeft: \"50px\" }}>Reset</Button>\n            </div>\n          ) : (\n              <div>\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={this.handleBack}\n                    style={{ marginLeft: \"50px\" }}\n                  >\n                    Back\n                </Button>\n                  <Button disabled={this.state.isDisable} variant=\"contained\" color=\"primary\" onClick={this.handleNext} style={{ float: \"right\", marginRight: \"50px\" }}>\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                  </Button>\n                </div>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    people: state.orderFood.people,\n    meal: state.orderFood.meal,\n    restaurant: state.orderFood.restaurant,\n    foods: state.orderFood.foods\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetValue: () => {\n      dispatch(ResetValue())\n    },\n\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as Types from './../constants/index';\nvar initialState = {};\nvar findFood = (foods, name) => {\n    var result = -1;\n    foods.forEach((food, index) => {\n        if (food.name === name) {\n            result = index;\n        }\n    });\n    return result;\n}\nconst orderFood = (state=initialState,action)=>{\n    switch(action.type){\n        case Types.SELECT_MEAL:{\n            state.meal = action.meal;\n            state.restaurant = '';\n            state.foods = null;\n            return {\n                ...state\n            }\n        }\n        case Types.SELECT_PEOPLE:{\n            state.people = action.people;\n            state.foods = null;\n            return {\n                ...state\n            }\n        }\n        case Types.SELECT_RESTAURANT:{\n            state.restaurant = action.restaurant;\n            state.foods = null;\n            return {\n                ...state\n            }\n        }\n        case Types.SELECT_FOOD:{\n            var foods = state.foods;\n            if(foods == null){\n                foods = []\n            }\n            foods.push(action.food)\n            state.foods = foods;\n            return {\n                ...state\n            }\n        }\n        case Types.RESET_VALUE:{\n            state = {};\n            return{\n                ...state\n            }\n        }\n        case Types.DELETE_FOOD:{\n            var index = findFood(state.foods,action.food.name)\n            console.log(index)\n            state.foods.splice(index,1);\n            return{\n                ...state\n            }\n        }\n        default:\n            return state;\n    }\n}\nexport default orderFood;\n","import { combineReducers } from 'redux';\nimport orderFood from './orderFood';\nconst appReducers = combineReducers({\n    orderFood\n});\n\nexport default appReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport appReducers from './reducers/index';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\n\nconst store = createStore(\n    appReducers,\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    ),\n);\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}